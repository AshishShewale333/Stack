Previous Greater Element
Difficulty
Easy
Marks Available
20.0
Solve Problem
Problem Description
Given an array, find the Previous Greater Element (PGE) for every element of an array. The PGE for an element x is the first greater element on the left side of x in the array. Elements for which no greater element exist (on the left side), consider PGE as -1.

Example 1:

Input : arr=[10,4,2,20,40,12,30]
Output: [-1,10,4,-1,-1,40,40]
Explanation: The previous greater element to the left side of 4,2,12 and 30 are 10 ,4 ,40 and 40 respectively. There is no any greater element to the left side of 10,20 and 40 so -1 in the answer. 
Example 2:

Input: arr=[40,30,20,10]
Output: [-1,40,30,20]
Constriants:

1<= size of array <= 100000
1 <= arr[i] <= 10000


✅ Java Code: Previous Greater Element
java
Copy
Edit
import java.util.*;

class PreviousGreaterElement {
    public int[] previousGreaterElements(int[] arr) {
        int n = arr.length;
        int[] result = new int[n];
        Stack<Integer> stack = new Stack<>();

        for (int i = 0; i < n; i++) {
            // Pop elements that are less than or equal to current element
            while (!stack.isEmpty() && stack.peek() <= arr[i]) {
                stack.pop();
            }

            // If stack is empty, no greater element on left
            result[i] = stack.isEmpty() ? -1 : stack.peek();

            // Push current element to stack
            stack.push(arr[i]);
        }

        return result;
    }

    public static void main(String[] args) {
        PreviousGreaterElement pge = new PreviousGreaterElement();

        int[] input1 = {10, 4, 2, 20, 40, 12, 30};
        System.out.println(Arrays.toString(pge.previousGreaterElements(input1))); // [-1, 10, 4, -1, -1, 40, 40]

        int[] input2 = {40, 30, 20, 10};
        System.out.println(Arrays.toString(pge.previousGreaterElements(input2))); // [-1, 40, 30, 20]
    }
}
💡 Explanation:
Iterate through the array from left to right.

Use a stack to keep track of potential previous greater elements.

For each element:

Pop elements from the stack until you find a greater one or the stack is empty.

If the stack is empty, assign -1 (no greater to the left).

Otherwise, the top of the stack is the previous greater element.

Push the current element onto the stack for future comparisons.

🧠 Example:
Input: [10, 4, 2, 20, 40, 12, 30]

pgsql
Copy
Edit
10 → -1 (no left)
4  → 10
2  → 4
20 → -1 (nothing greater on left)
40 → -1
12 → 40
30 → 40
Output: [-1, 10, 4, -1, -1, 40, 40]

⏱ Complexity:
Time: O(n)

Space: O(n) for stack and result
