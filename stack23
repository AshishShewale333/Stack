Daily Temperatures
Medium
Marks Available: 20.00
Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

 

Example 1:

Input: temperatures = [73,74,75,71,69,72,76,73]
Output: [1,1,4,2,1,1,0,0]
Example 2:

Input: temperatures = [30,40,50,60]
Output: [1,1,1,0]
Example 3:

Input: temperatures = [30,60,90]
Output: [1,1,0]
 

Constraints:

1 <= temperatures.length <= 105
30 <= temperatures[i] <= 100


✅ Java Code:
java
Copy
Edit
import java.util.Stack;

class DailyTemperatures {
    public int[] dailyTemperatures(int[] temperatures) {
        int n = temperatures.length;
        int[] answer = new int[n];
        Stack<Integer> stack = new Stack<>(); // stores indices

        for (int i = 0; i < n; i++) {
            while (!stack.isEmpty() && temperatures[i] > temperatures[stack.peek()]) {
                int prevIndex = stack.pop();
                answer[prevIndex] = i - prevIndex; // how many days waited
            }
            stack.push(i);
        }

        return answer;
    }

    // Sample usage
    public static void main(String[] args) {
        DailyTemperatures dt = new DailyTemperatures();

        int[] result1 = dt.dailyTemperatures(new int[]{73, 74, 75, 71, 69, 72, 76, 73});
        int[] result2 = dt.dailyTemperatures(new int[]{30, 40, 50, 60});
        int[] result3 = dt.dailyTemperatures(new int[]{30, 60, 90});

        printArray(result1); // Output: [1, 1, 4, 2, 1, 1, 0, 0]
        printArray(result2); // Output: [1, 1, 1, 0]
        printArray(result3); // Output: [1, 1, 0]
    }

    private static void printArray(int[] arr) {
        for (int num : arr) System.out.print(num + " ");
        System.out.println();
    }
}
💡 How It Works:
Use a stack of indices:

While current temperature is greater than the temperature at the index on top of the stack, pop the index and calculate how many days it took to get a warmer temperature.

Then push the current index onto the stack.

If no warmer day is found for a given index, the answer stays 0 (default value).

🧠 Example:
Input: [73,74,75,71,69,72,76,73]
Output: [1,1,4,2,1,1,0,0]

⏱ Time & Space Complexity:
Time: O(n) — each index is pushed and popped at most once

Space: O(n) — for the stack and the output array

